{"version":3,"sources":["actions/index.js","actions/ActionType.js","components/ImportFromFileBodyComponent.js","components/Main.js","components/App.js","reducers/analyserReducer.js","reducers/index.js","serviceWorker.js","Shape.js","logic/lexical.js","index.js","logo.svg"],"names":["updateCode","text","type","codeAnalysis","symbol_table","connect","state","analyser","analyserReducer","dispatch","bindActionCreators","withStyles","theme","button","margin","spacing","unit","width","input","display","withTheme","props","fileReader","classes","handleFileRead","e","content","result","react_default","a","createElement","accept","className","id","multiple","onChange","file","undefined","target","files","FileReader","onloadend","readAsText","htmlFor","Button_default","variant","component","color","Main","_this","this","AppBar_default","position","Toolbar_default","src","logo","alt","Typography_default","title","Grid_default","container","item","xs","Paper_default","paper","components_ImportFromFileBodyComponent","TextField_default","label","multiline","value","lexical","preventDefault","textField","placeholder","Table_default","table","TableHead_default","TableRow_default","TableCell_default","TableBody_default","error_table","map","element","key","concat","line","column","detail","tokenListCellTitle","symbolTableCellTitle","style","height","tokenListCell","token","symbolTableCell","scope","lexeme","React","Component","Object","defineProperty","borderLeft","padding","breakpoints","up","backgroundColor","align","borderRight","App","components_Main","arguments","length","action","newState","assign","processInput","analyserApp","combineReducers","Boolean","window","location","hostname","match","initial_shape","Lexical","classCallCheck","reserved_stuff","alphabet","Set","states","finals","possible_finals","initial","transitions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","symbol","to","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","File","FileList","Blob","alert","reset_ids","forward","line_number","lexeme_begin","column_number","toConsumableArray","was_final","possible_final","slice","has","info","push","extractInfo","filter","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","ids","store","createStore","reducer","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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AMH,MAAO,QAASN,OAAQ,4BACxC,CAAES,OAAQ,KAAMH,MAAO,QAASN,OAAQ,SACxC,CAAES,OAAQ,KAAMH,MAAO,QAASN,OAAQ,aACxC,CAAES,OAAQ,IAAKH,MAAO,aAAcN,OAAQ,KAG9CrC,KAAK9C,aAAe,GACpB8C,KAAK8B,YAAc,GACnB9B,KAAK6E,SAAW,IAAIC,IAAI,CACtB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAEF9E,KAAK+E,OAAS,IAAID,IAAI,CACpB,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,aACA,MACA,cACA,eACA,UAEF9E,KAAKgF,OAAS,IAAIF,IAAI,CACpB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,KACA,IACA,IACA,aACA,MACA,iBAGF9E,KAAKiF,gBAAkB,IAAIH,IAAI,CAAC,IAAK,gBACrC9E,KAAKkF,QAAU,KAEflF,KAAKmF,YAAc,GA9LF,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAnG,EAAA,IAgMjB,QAAAoG,EAAAC,EAAkBxF,KAAK+E,OAAvBU,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA+B,KAAtBhI,EAAsBmI,EAAApE,MAC7BnB,KAAKmF,YAAY/H,GAAS,GADG,IAAAyI,GAAA,EAAAC,GAAA,EAAAC,OAAA5G,EAAA,IAE7B,QAAA6G,EAAAC,EAAmBjG,KAAK6E,SAAxBY,OAAAC,cAAAG,GAAAG,EAAAC,EAAAN,QAAAC,MAAAC,GAAA,EAAkC,KAAzBK,EAAyBF,EAAA7E,MAChCnB,KAAKmF,YAAY/H,GAAO8I,GAAU,CAAEC,GAAI,IAAIrB,IAAI,CAAC,YAHtB,MAAAsB,GAAAN,GAAA,EAAAC,EAAAK,EAAA,YAAAP,GAAA,MAAAI,EAAAI,QAAAJ,EAAAI,SAAA,WAAAP,EAAA,MAAAC,KAhMd,MAAAK,GAAAf,GAAA,EAAAC,EAAAc,EAAA,YAAAhB,GAAA,MAAAI,EAAAa,QAAAb,EAAAa,SAAA,WAAAhB,EAAA,MAAAC,GAwMjBtF,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKmF,YAAL,KAA4BgB,GAAK,IAAIrB,IAAI,CAAC,eAC1C9E,KAAKm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,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E,KAAKmF,YAAL,aAAoCgB,GAAK,IAAIrB,IAAI,CAAC,eAClD9E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","file":"static/js/main.5648076c.chunk.js","sourcesContent":["/*\n *  @file index.js\n *\n *  @author Bruno Marques do Nascimento\n *  @date 23/04/2019\n *  @version 1.0\n */\n\nimport * as actionType from \"./ActionType\";\n\nexport const updateCode = text => ({\n  type: actionType.UPDATE_CODE,\n  text: text\n});\n\nexport const codeAnalysis = symbol_table => ({\n  type: actionType.CODE_ANALYSIS,\n  symbol_table: symbol_table\n});\n","/*\n *  @file ActionType.js\n *\n *  @author Bruno Marques do Nascimento\n *  @date 23/04/2019\n *  @version 1.0\n */\n\nexport const UPDATE_CODE = \"UPDATE_CODE\";\nexport const CODE_ANALYSIS = \"CODE_ANALYSIS\";\n","/*\n *  @file ImportFromFileComponent.js\n *\n *  @author Bruno Marques do Nascimento\n *  @date 23/04/2019\n *  @version 1.0\n */\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { updateCode } from \"../actions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    width: \"98%\"\n  },\n  input: {\n    display: \"none\"\n  }\n});\n\nconst ImportFromFileBodyComponent = props => {\n  const { classes } = props;\n  let fileReader;\n\n  const handleFileRead = e => {\n    const content = fileReader.result;\n    props.updateCode(content);\n  };\n\n  const handleFileChosen = file => {\n    if (file !== undefined) {\n      fileReader = new FileReader();\n      fileReader.onloadend = handleFileRead;\n      fileReader.readAsText(file);\n    }\n  };\n\n  return (\n    // <div className=\"upload-expense\">\n    //   <input\n    //     type=\"file\"\n    //     id=\"file\"\n    //     className=\"input-file\"\n    //     accept=\".xpp\"\n    //     onChange={e => handleFileChosen(e.target.files[0])}\n    //   />\n    // </div>\n    <div>\n      <input\n        accept=\".xpp\"\n        className={classes.input}\n        id=\"contained-button-file\"\n        multiple\n        type=\"file\"\n        onChange={e => handleFileChosen(e.target.files[0])}\n      />\n      <label htmlFor=\"contained-button-file\">\n        <Button\n          variant=\"contained\"\n          component=\"span\"\n          className={classes.button}\n          color=\"primary\"\n        >\n          SELECT LOCAL FILE\n        </Button>\n      </label>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({ analyser: state.analyserReducer });\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      updateCode\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles, { withTheme: true })(ImportFromFileBodyComponent));\n","/*\n *  @file Main.js\n *\n *  @author Bruno Marques do Nascimento\n *  @date 23/04/2019\n *  @version 1.0\n */\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { updateCode, codeAnalysis } from \"../actions\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\n// import Button from \"@material-ui/core/Button\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport logo from \"../logo.svg\";\nimport ImportFromFileBodyComponent from \"./ImportFromFileBodyComponent.js\";\n\nlet PADDING_SIZE = \"10px\";\n\nconst styles = theme => ({\n  textField: {\n    width: \"98%\",\n    margin: theme.spacing.unit\n  },\n  paper: {\n    margin: theme.spacing.unit\n  },\n  title: {\n    display: \"none\",\n    borderLeft: \"0.1em solid #225378\",\n    padding: theme.spacing.unit,\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  logo: {\n    // backgroundColor: \"white\",\n    margin: theme.spacing.unit\n  },\n  symbolTableCell: {\n    backgroundColor: \"#f9c29f\",\n    padding: PADDING_SIZE,\n    align: \"center\"\n  },\n  symbolTableCellTitle: {\n    backgroundColor: \"#fa792c\",\n    padding: PADDING_SIZE\n  },\n  tokenListCellTitle: {\n    backgroundColor: \"#3954ae\",\n    color: \"white\",\n    padding: PADDING_SIZE\n  },\n  tokenListCell: {\n    borderRight: \"0.1em solid gray\",\n    padding: PADDING_SIZE,\n    backgroundColor: \"#c6dcff\"\n  }\n});\n\nclass Main extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className=\"root\">\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <img src={logo} alt=\"logo\" width=\"200px\" className={classes.logo} />\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n              Lexical Analysis\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Grid container spacing={0}>\n          <Grid item xs={4}>\n            <Paper className={classes.paper}>\n              <ImportFromFileBodyComponent />\n            </Paper>\n            <Paper className={classes.paper}>\n              <TextField\n                id=\"outlined-multiline-flexible\"\n                label=\"Input your code here...\"\n                multiline\n                value={this.props.analyser.lexical.input}\n                onChange={e => {\n                  e.preventDefault();\n                  this.props.updateCode(e.target.value);\n                }}\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                placeholder=\"\"\n              />\n            </Paper>\n            <Paper className={classes.paper}>\n              <Table className={classes.table}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Lexical Error (Line number)</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.props.analyser.lexical.error_table.map(\n                    (element, id) => {\n                      return (\n                        <TableRow key={id}>\n                          <TableCell>{`Line: ${element.line} | Column: ${\n                            element.column\n                          } | Lexeme: ${element.detail}`}</TableCell>\n                        </TableRow>\n                      );\n                    }\n                  )}\n                </TableBody>\n              </Table>\n            </Paper>\n            {/* <Paper className={classes.paper}>\n              <Table className={classes.table}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Info</TableCell>\n                    <TableCell>Line Number</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.props.analyser.syntactic.result.map((element, id) => {\n                    return (\n                      <TableRow key={id}>\n                        <TableCell>{element.message}</TableCell>\n                        <TableCell>{element.line_number}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={e => {\n                  e.preventDefault();\n                  this.props.codeAnalysis(\n                    this.props.analyser.lexical.symbol_table.slice(0)\n                  );\n                }}\n              >\n                <Typography color=\"inherit\" variant=\"subtitle1\">\n                  Syntactic Analysis\n                </Typography>\n              </Button>\n            </Paper> */}\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.paper}>\n              <Table className={classes.table}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell className={classes.tokenListCellTitle}>\n                      Token List\n                    </TableCell>\n                    <TableCell className={classes.symbolTableCellTitle}>\n                      ID\n                    </TableCell>\n                    <TableCell className={classes.symbolTableCellTitle}>\n                      Detail\n                    </TableCell>\n                    <TableCell className={classes.symbolTableCellTitle}>\n                      Lexeme\n                    </TableCell>\n                    <TableCell className={classes.symbolTableCellTitle}>\n                      Line\n                    </TableCell>\n                    <TableCell className={classes.symbolTableCellTitle}>\n                      Column\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.props.analyser.lexical.symbol_table.map(\n                    (element, id) => {\n                      return (\n                        <TableRow key={id} style={{ height: 25 }}>\n                          <TableCell className={classes.tokenListCell}>\n                            {element.token}\n                          </TableCell>\n                          <TableCell className={classes.symbolTableCell}>\n                            {element.id}\n                          </TableCell>\n                          <TableCell className={classes.symbolTableCell}>\n                            {element.detail}\n                          </TableCell>\n                          <TableCell\n                            component=\"th\"\n                            scope=\"row\"\n                            className={classes.symbolTableCell}\n                          >\n                            {element.lexeme}\n                          </TableCell>\n                          <TableCell className={classes.symbolTableCell}>\n                            {element.line}\n                          </TableCell>\n                          <TableCell className={classes.symbolTableCell}>\n                            {element.column}\n                          </TableCell>\n                        </TableRow>\n                      );\n                    }\n                  )}\n                </TableBody>\n              </Table>\n            </Paper>\n          </Grid>\n          <Grid item xs={6} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ analyser: state.analyserReducer });\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      updateCode,\n      codeAnalysis\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles, { withTheme: true })(Main));\n","/*\n *  @file App.js\n *\n *  @author Bruno Marques do Nascimento\n *  @date 23/04/2019\n *  @version 1.0\n */\n\nimport React from \"react\";\nimport Main from \"./Main.js\";\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <Main />\n    </div>\n  );\n};\nexport default App;\n","/*\n *  @file analyserReducer.js\n *\n *  @author Bruno Marques do Nascimento\n *  @date 23/04/2019\n *  @version 1.0\n */\n\nimport * as actionType from \"../actions/ActionType\";\n\nconst analyserReducer = (state = 0, action) => {\n  let newState = Object.assign({}, state);\n\n  switch (action.type) {\n    case actionType.UPDATE_CODE:\n      newState.lexical.processInput(action.text);\n\n      return newState;\n\n    // case actionType.CODE_ANALYSIS:\n    //   newState.syntactic.analysis(action.symbol_table);\n\n    // return newState;\n\n    default:\n      return newState;\n  }\n};\nexport default analyserReducer;\n","/*\n *  @file index.js\n *\n *  @author Bruno Marques do Nascimento\n *  @date 23/04/2019\n *  @version 1.0\n */\n\nimport { combineReducers } from \"redux\";\nimport analyserReducer from \"./analyserReducer\";\n\nconst analyserApp = combineReducers({\n  analyserReducer\n});\n\nexport default analyserApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*\n *  @file Shape.js\n *\n *  @author Bruno Marques do Nascimento\n *  @date 23/04/2019\n *  @version 1.0\n */\n\nimport Lexical from \"./logic/lexical\";\n// import Synctatic from \"./logic/syntactic\";\n// import Grammar from \"./logic/Grammar\";\n\nexport const initial_shape = {\n  analyserReducer: {\n    lexical: new Lexical(\n      \"\"\n    ) /*`class bintree{\n  \n  class data{\n    int dia, mes, ano;\n    \n    constructor(){\n      ano = 1900;\n      mes = 1;\n      dia = 1;\n    }\n\n    constructor(int d, int m, int a){\n      dia = d;\n      mes = m;\n      ano = a;\n    }\n\n    int compara(data x){\n      if (ano < x.ano) \n        then return -1;\n      if (ano > x.ano)\n        then return 1;\n      if (mes < x.mes)\n        then return -1;\n      if (mes > x.mes)\n        then return 1;\n      if (dia < x.dia)\n        then return -1;\n      if (dia > x.dia)\n        then return 1;\n    }\n\n  }\n\n  data key;\n  bintree left, right;\n\n  constructor(data x){\n    key = x\n    left = null;\n    right = nul;\n  }\n\n  int insert(data k){\n    int x;\n    x = k.compara(key);\n    if (x < 0) then {\n      if (left != null){\n        then return left.insert(k);\n      left = new bintree(k);\n      return 1;\n    }\n    if (x > 0) then {\n      if (right != null){\n        then return right.insert(k);\n      right = new bintree(k);\n      return 1;\n    }\n    return 0;\n  }\n\n  int treeprint(int x){\n    int i;\n    if (left != null)\n      then i = left.treeprint(x+4);\n    for (i = 0; i < x; i = i + 1)\n      print \" \";\n    print key.dia + \"/\" + key.mes + \"/\" + key.ano + \"\\\\n\";\n    if (right != null)\n      then i = right.treeprint(x+4)\n  }\n\n  int start(){\n    bintree t;\n    int i, d, m, a;\n    data w;\n    print \"Digite o dia: \";\n    read d;\n    print \"Digite o mes: \";\n    read m;\n    print \"Digite o ano: \";\n    read a;\n    \n    w = new data (d, m, a);\n    t = new bintree(w);\n\n    for (i = 0; i < 10; i = i + 1) {\n      print \"Digite o dia: \";\n      read d;\n      print \"Digite o mes: \";\n      read m;\n      print \"Digite o ano: \";\n      read a;\n   \n      w = new data (d, m, a);\n      if (t.insert(w) == 0)\n        then print \"Elemento já existe\\\\n\";\n    }\n    i = t.treeprint(0);\n    return 0;\n  }\n}`),*/\n    // syntactic: new Synctatic()\n  }\n};\n","/*\n *  @file lexical.js\n *\n *  @author Bruno Marques do Nascimento\n *  @date 23/04/2019\n *  @version 1.0\n */\n\nexport default class Lexical {\n  constructor(input) {\n    this.id = 1; /** Atributo ID da tabela de símbolo */\n    this.input = input; /** Texto lido do arquivo fornecido */\n\n    /** Estrutura contendo palavras reservadas e tokens padrões */\n    this.reserved_stuff = [\n      { lexeme: \"class\", token: \"RW\", detail: \"\" },\n      { lexeme: \"extends\", token: \"RW\", detail: \"\" },\n      { lexeme: \"int\", token: \"RW\", detail: \"\" },\n      { lexeme: \"string\", token: \"RW\", detail: \"\" },\n      { lexeme: \"constructor\", token: \"RW\", detail: \"\" },\n      { lexeme: \"break\", token: \"RW\", detail: \"\" },\n      { lexeme: \"print\", token: \"RW\", detail: \"\" },\n      { lexeme: \"read\", token: \"RW\", detail: \"\" },\n      { lexeme: \"return\", token: \"RW\", detail: \"\" },\n      { lexeme: \"super\", token: \"RW\", detail: \"\" },\n      { lexeme: \"if\", token: \"RW\", detail: \"\" },\n      { lexeme: \"else\", token: \"RW\", detail: \"\" },\n      { lexeme: \"for\", token: \"RW\", detail: \"\" },\n      { lexeme: \"new\", token: \"RW\", detail: \"\" },\n      { lexeme: \"null\", token: \"RW\", detail: \"\" },\n      { lexeme: \"*\", token: \"ARITOP\", detail: \"Multiplication\" },\n      { lexeme: \"/\", token: \"ARITOP\", detail: \"Division\" },\n      { lexeme: \"%\", token: \"ARITOP\", detail: \"Modulo\" },\n      { lexeme: \"+\", token: \"ARITOP\", detail: \"Addition\" },\n      { lexeme: \"-\", token: \"ARITOP\", detail: \"Subtraction\" },\n      { lexeme: \"{\", token: \"PUNCTUATION\", detail: \"Left Brace\" },\n      { lexeme: \"}\", token: \"PUNCTUATION\", detail: \"Right Brace\" },\n      { lexeme: \";\", token: \"PUNCTUATION\", detail: \"Semicolon\" },\n      { lexeme: \"[\", token: \"PUNCTUATION\", detail: \"Left Bracket\" },\n      { lexeme: \"]\", token: \"PUNCTUATION\", detail: \"Right Bracket\" },\n      { lexeme: \"(\", token: \"PUNCTUATION\", detail: \"Left parenthesis\" },\n      { lexeme: \")\", token: \"PUNCTUATION\", detail: \"Right parenthesis\" },\n      { lexeme: \",\", token: \"PUNCTUATION\", detail: \"Comma\" },\n      { lexeme: \".\", token: \"PUNCTUATION\", detail: \"Dot\" },\n      { lexeme: \"<\", token: \"RELOP\", detail: \"Less than\" },\n      { lexeme: \"<=\", token: \"RELOP\", detail: \"Less than or equal to\" },\n      { lexeme: \">\", token: \"RELOP\", detail: \"Greater than\" },\n      { lexeme: \">=\", token: \"RELOP\", detail: \"Greater than or equal to\" },\n      { lexeme: \"==\", token: \"RELOP\", detail: \"Equal\" },\n      { lexeme: \"!=\", token: \"RELOP\", detail: \"Not Equal\" },\n      { lexeme: \"=\", token: \"ASSIGNMENT\", detail: \"\" }\n    ];\n\n    this.symbol_table = [];\n    this.error_table = [];\n    this.alphabet = new Set([\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n      \"A\",\n      \"B\",\n      \"C\",\n      \"D\",\n      \"E\",\n      \"F\",\n      \"G\",\n      \"H\",\n      \"I\",\n      \"J\",\n      \"K\",\n      \"L\",\n      \"M\",\n      \"N\",\n      \"O\",\n      \"P\",\n      \"Q\",\n      \"R\",\n      \"S\",\n      \"T\",\n      \"U\",\n      \"V\",\n      \"W\",\n      \"X\",\n      \"Y\",\n      \"Z\",\n      \"0\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"*\",\n      \"/\",\n      \"%\",\n      \"+\",\n      \"-\",\n      \";\",\n      \"(\",\n      \")\",\n      \"{\",\n      \"}\",\n      \"[\",\n      \"]\",\n      \"<\",\n      \">\",\n      \"=\",\n      \"!\",\n      \".\",\n      \",\",\n      '\"',\n      \" \"\n    ]);\n    this.states = new Set([\n      \"q0\",\n      \"*\",\n      \"/\",\n      \"%\",\n      \"+\",\n      \"-\",\n      \";\",\n      \"(\",\n      \")\",\n      \"{\",\n      \"}\",\n      \"[\",\n      \"]\",\n      \"<\",\n      \"<=\",\n      \">\",\n      \">=\",\n      \"=\",\n      \"==\",\n      \"!\",\n      \"!=\",\n      \",\",\n      \".\",\n      \"identifier\",\n      \"num\",\n      \"string-open\",\n      \"string-close\",\n      \"error\"\n    ]);\n    this.finals = new Set([\n      \"*\",\n      \"/\",\n      \"%\",\n      \"+\",\n      \"-\",\n      \";\",\n      \"(\",\n      \")\",\n      \"{\",\n      \"}\",\n      \"[\",\n      \"]\",\n      \"<\",\n      \"<=\",\n      \">\",\n      \">=\",\n      \"=\",\n      \"==\",\n      \"!=\",\n      \",\",\n      \".\",\n      \"identifier\",\n      \"num\",\n      \"string-close\"\n    ]);\n    /** Estados que não são finais, mas podem vir a ser */\n    this.possible_finals = new Set([\"!\", \"string-open\"]);\n    this.initial = \"q0\";\n\n    this.transitions = [];\n    /** Inicializa todas as transições do automato como erro */\n    for (let state of this.states) {\n      this.transitions[state] = [];\n      for (let symbol of this.alphabet) {\n        this.transitions[state][symbol] = { to: new Set([\"error\"]) };\n      }\n    }\n\n    /** Definição das transições a partir do estado inicial */\n    this.transitions[\"q0\"][\"a\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"b\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"c\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"d\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"e\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"f\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"g\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"h\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"i\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"j\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"k\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"l\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"m\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"n\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"o\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"p\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"q\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"r\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"s\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"t\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"u\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"v\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"w\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"x\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"y\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"z\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"A\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"B\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"C\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"D\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"E\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"F\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"G\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"H\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"I\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"J\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"K\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"L\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"M\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"N\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"O\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"P\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"Q\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"R\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"S\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"T\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"U\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"V\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"W\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"X\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"Y\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"Z\"].to = new Set([\"identifier\"]);\n    this.transitions[\"q0\"][\"0\"].to = new Set([\"num\"]);\n    this.transitions[\"q0\"][\"1\"].to = new Set([\"num\"]);\n    this.transitions[\"q0\"][\"2\"].to = new Set([\"num\"]);\n    this.transitions[\"q0\"][\"3\"].to = new Set([\"num\"]);\n    this.transitions[\"q0\"][\"4\"].to = new Set([\"num\"]);\n    this.transitions[\"q0\"][\"5\"].to = new Set([\"num\"]);\n    this.transitions[\"q0\"][\"6\"].to = new Set([\"num\"]);\n    this.transitions[\"q0\"][\"7\"].to = new Set([\"num\"]);\n    this.transitions[\"q0\"][\"8\"].to = new Set([\"num\"]);\n    this.transitions[\"q0\"][\"9\"].to = new Set([\"num\"]);\n    this.transitions[\"q0\"][\"*\"].to = new Set([\"*\"]);\n    this.transitions[\"q0\"][\"/\"].to = new Set([\"/\"]);\n    this.transitions[\"q0\"][\"%\"].to = new Set([\"%\"]);\n    this.transitions[\"q0\"][\"+\"].to = new Set([\"+\"]);\n    this.transitions[\"q0\"][\"-\"].to = new Set([\"-\"]);\n    this.transitions[\"q0\"][\";\"].to = new Set([\";\"]);\n    this.transitions[\"q0\"][\"(\"].to = new Set([\"(\"]);\n    this.transitions[\"q0\"][\")\"].to = new Set([\")\"]);\n    this.transitions[\"q0\"][\"{\"].to = new Set([\"{\"]);\n    this.transitions[\"q0\"][\"}\"].to = new Set([\"}\"]);\n    this.transitions[\"q0\"][\"[\"].to = new Set([\"[\"]);\n    this.transitions[\"q0\"][\"]\"].to = new Set([\"]\"]);\n    this.transitions[\"q0\"][\"<\"].to = new Set([\"<\"]);\n    this.transitions[\"q0\"][\">\"].to = new Set([\">\"]);\n    this.transitions[\"q0\"][\"=\"].to = new Set([\"=\"]);\n    this.transitions[\"q0\"][\"!\"].to = new Set([\"!\"]);\n    this.transitions[\"q0\"][\".\"].to = new Set([\".\"]);\n    this.transitions[\"q0\"][\",\"].to = new Set([\",\"]);\n\n    /** Definição das transições de operações relacionais */\n    this.transitions[\"<\"][\"=\"].to = new Set([\"<=\"]);\n    this.transitions[\">\"][\"=\"].to = new Set([\">=\"]);\n    this.transitions[\"=\"][\"=\"].to = new Set([\"==\"]);\n    this.transitions[\"!\"][\"=\"].to = new Set([\"!=\"]);\n\n    /** Definição das transições de identificadores */\n    this.transitions[\"identifier\"][\"a\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"b\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"c\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"d\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"e\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"f\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"g\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"h\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"i\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"j\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"k\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"l\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"m\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"n\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"o\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"p\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"q\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"r\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"s\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"t\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"u\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"v\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"w\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"x\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"y\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"z\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"A\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"B\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"C\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"D\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"E\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"F\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"G\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"H\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"I\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"J\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"K\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"L\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"M\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"N\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"O\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"P\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"Q\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"R\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"S\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"T\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"U\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"V\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"W\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"X\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"Y\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"Z\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"0\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"1\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"2\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"3\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"4\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"5\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"6\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"7\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"8\"].to = new Set([\"identifier\"]);\n    this.transitions[\"identifier\"][\"9\"].to = new Set([\"identifier\"]);\n\n    /** Definição das transições para reconhecimento de números (int-constant) */\n    this.transitions[\"num\"][\"0\"].to = new Set([\"num\"]);\n    this.transitions[\"num\"][\"1\"].to = new Set([\"num\"]);\n    this.transitions[\"num\"][\"2\"].to = new Set([\"num\"]);\n    this.transitions[\"num\"][\"3\"].to = new Set([\"num\"]);\n    this.transitions[\"num\"][\"4\"].to = new Set([\"num\"]);\n    this.transitions[\"num\"][\"5\"].to = new Set([\"num\"]);\n    this.transitions[\"num\"][\"6\"].to = new Set([\"num\"]);\n    this.transitions[\"num\"][\"7\"].to = new Set([\"num\"]);\n    this.transitions[\"num\"][\"8\"].to = new Set([\"num\"]);\n    this.transitions[\"num\"][\"9\"].to = new Set([\"num\"]);\n    this.transitions[\"-\"][\"0\"].to = new Set([\"num\"]);\n    this.transitions[\"-\"][\"1\"].to = new Set([\"num\"]);\n    this.transitions[\"-\"][\"2\"].to = new Set([\"num\"]);\n    this.transitions[\"-\"][\"3\"].to = new Set([\"num\"]);\n    this.transitions[\"-\"][\"4\"].to = new Set([\"num\"]);\n    this.transitions[\"-\"][\"5\"].to = new Set([\"num\"]);\n    this.transitions[\"-\"][\"6\"].to = new Set([\"num\"]);\n    this.transitions[\"-\"][\"7\"].to = new Set([\"num\"]);\n    this.transitions[\"-\"][\"8\"].to = new Set([\"num\"]);\n    this.transitions[\"-\"][\"9\"].to = new Set([\"num\"]);\n\n    /** Definição das transições para reconhecimento de strngs */\n    this.transitions[\"q0\"]['\"'].to = new Set([\"string-open\"]);\n    for (let symbol of this.alphabet) {\n      this.transitions[\"string-open\"][symbol] = {\n        to: new Set([\"string-open\"])\n      };\n    }\n    this.transitions[\"string-open\"]['\"'].to = new Set([\"string-close\"]);\n\n    /** Verifica o suporte a API de arquivos. */\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n      /** Great success! All the File APIs are supported. */\n    } else {\n      alert(\"The File APIs are not fully supported in this browser.\");\n    }\n  }\n\n  /** Função responsável por processar o arquivo de entrada */\n  processInput(input) {\n    this.reset_ids();\n    this.input = input;\n    let lexeme = \"\";\n    let forward = 0;\n    let state = \"q0\";\n    let has_char = true;\n    let line_number = 0;\n    let lexeme_begin = 0;\n    let column_number = 0;\n\n    /** Executa enquanto houver caracteres para serem lidos */\n    while (has_char) {\n      state = \"q0\";\n      /** Verifica se existem caracteres para serem lidos  */\n      if (this.input === undefined || this.input[forward] === undefined) break;\n\n      /** Se o caractere for \"\\n\" é realizado o skip para o próximo caractere */\n      if (this.input[forward] === \"\\n\") {\n        forward++;\n        lexeme_begin = forward;\n        line_number++;\n        column_number = 0;\n\n        /** Se o caractere for \" \" é realizado o skip para o próximo caractere */\n      } else if (this.input[forward] === \" \") {\n        forward++;\n        lexeme_begin = forward;\n        column_number++;\n\n        /** Se o caractere transitar para estados de erro  */\n      } else if (\n        this.transitions[state][this.input[forward]] === undefined ||\n        [...this.transitions[state][this.input[forward]].to][0] === \"error\"\n      ) {\n        lexeme = this.input[forward];\n        state = \"error\";\n\n        /** Se for outro caractere válido será realizado seu processamento */\n      } else {\n        let was_final = false;\n        let possible_final = false;\n\n        do {\n          state = [...this.transitions[state][this.input[forward]].to][0];\n          if (state === \"string-open\") {\n            do {\n              forward++;\n              column_number++;\n              /** Controle de quebra de linha */\n              if (this.input[forward] === \"\\n\") {\n                column_number = 0;\n                line_number++;\n              }\n            } while (\n              this.input[forward] !== undefined &&\n              this.input[forward] !== '\"'\n            );\n            lexeme = this.input.slice(lexeme_begin, forward + 1);\n            if (this.input[forward] === '\"') {\n              state = \"string-close\";\n            } else {\n              state = \"error\";\n            }\n            break;\n          } else {\n            if (this.finals.has(state)) {\n              possible_final = false;\n              was_final = true;\n            } else if (this.possible_finals.has(state)) {\n              possible_final = true;\n              was_final = false;\n            }\n            column_number++;\n            forward++;\n          }\n        } while (\n          this.input[forward] !== undefined &&\n          this.transitions[state][this.input[forward]] !== undefined &&\n          [...this.transitions[state][this.input[forward]].to][0] !== \"error\"\n        );\n\n        if (was_final) {\n          lexeme = this.input.slice(lexeme_begin, forward);\n        } else if (possible_final) {\n          lexeme = this.input.slice(lexeme_begin, forward);\n          forward--;\n          column_number--;\n          state = \"error\";\n        }\n      }\n      let info;\n\n      /** Switch-Case responsável por definir as ações conforme o estado final\n       * do automato após a extração de um lexema. */\n      switch (state) {\n        /** Estado de ERRO */\n        case \"error\":\n          this.error_table.push({\n            line: line_number,\n            column: column_number,\n            detail: lexeme\n          });\n          forward++;\n          column_number++;\n          lexeme_begin = forward;\n          break;\n        /** Estado de identificação de um NÚMERO */\n        case \"num\":\n          this.symbol_table.push({\n            id: this.id++,\n            lexeme: lexeme,\n            token: \"NUM\",\n            detail: \"\",\n            line: line_number,\n            column: column_number - lexeme.length\n          });\n          lexeme_begin = forward;\n          break;\n\n        /** Estado de identificação de uma STRING */\n        case \"string-close\":\n          this.symbol_table.push({\n            id: this.id++,\n            lexeme: lexeme,\n            token: \"STRING\",\n            detail: \"\",\n            line: line_number,\n            column: column_number\n          });\n          forward++;\n          column_number++;\n          lexeme_begin = forward;\n          break;\n\n        /** Estado INICIAL */\n        case \"q0\":\n          // DO NOTHING\n          break;\n\n        /** Estado de identificação de um IDENTIFICADOR (ID ou RW) */\n        case \"identifier\":\n          info = this.extractInfo(info, lexeme);\n          if (info.length === 0) {\n            this.symbol_table.push({\n              id: this.id++,\n              lexeme: lexeme,\n              token: \"ID\",\n              detail: \"\",\n              line: line_number,\n              column: column_number - lexeme.length\n            });\n            lexeme_begin = forward;\n          } else {\n            this.symbol_table.push({\n              id: this.id++,\n              token: info[0].token,\n              lexeme: info[0].lexeme,\n              detail: info[0].detail,\n              line: line_number,\n              column: column_number - lexeme.length\n            });\n          }\n          break;\n\n        /** OUTROS */\n        default:\n          info = this.extractInfo(info, state);\n          this.symbol_table.push({\n            id: this.id++,\n            token: info[0].token,\n            lexeme: info[0].lexeme,\n            detail: info[0].detail,\n            line: line_number,\n            column: column_number - lexeme.length\n          });\n          lexeme_begin = forward;\n          break;\n      }\n    }\n  }\n\n  extractInfo(info, lexeme) {\n    info = this.reserved_stuff.filter(e => e.lexeme === lexeme);\n    return info;\n  }\n\n  reset_ids() {\n    for (let each of this.reserved_stuff) {\n      each.ids = [];\n    }\n    this.symbol_table = [];\n    this.error_table = [];\n    this.id = 1;\n  }\n}\n","/*\n *  @file index.js\n *\n *  @author Bruno Marques do Nascimento\n *  @date 23/04/2019\n *  @version 1.0\n */\n\nimport \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { initial_shape } from \"./Shape\";\n\nconst store = createStore(reducer, initial_shape);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.ad3d725a.svg\";"],"sourceRoot":""}